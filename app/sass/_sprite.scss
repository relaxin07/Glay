// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$facebook-icon-name: 'facebook-icon';
$facebook-icon-x: 0px;
$facebook-icon-y: 0px;
$facebook-icon-offset-x: 0px;
$facebook-icon-offset-y: 0px;
$facebook-icon-width: 30px;
$facebook-icon-height: 30px;
$facebook-icon-total-width: 79px;
$facebook-icon-total-height: 60px;
$facebook-icon-image: '../img/sprite.png';
$facebook-icon: (0px, 0px, 0px, 0px, 30px, 30px, 79px, 60px, '../img/sprite.png', 'facebook-icon', );
$instagram-icon-name: 'instagram-icon';
$instagram-icon-x: 30px;
$instagram-icon-y: 0px;
$instagram-icon-offset-x: -30px;
$instagram-icon-offset-y: 0px;
$instagram-icon-width: 30px;
$instagram-icon-height: 30px;
$instagram-icon-total-width: 79px;
$instagram-icon-total-height: 60px;
$instagram-icon-image: '../img/sprite.png';
$instagram-icon: (30px, 0px, -30px, 0px, 30px, 30px, 79px, 60px, '../img/sprite.png', 'instagram-icon', );
$telegramm-icon-name: 'telegramm-icon';
$telegramm-icon-x: 60px;
$telegramm-icon-y: 0px;
$telegramm-icon-offset-x: -60px;
$telegramm-icon-offset-y: 0px;
$telegramm-icon-width: 19px;
$telegramm-icon-height: 19px;
$telegramm-icon-total-width: 79px;
$telegramm-icon-total-height: 60px;
$telegramm-icon-image: '../img/sprite.png';
$telegramm-icon: (60px, 0px, -60px, 0px, 19px, 19px, 79px, 60px, '../img/sprite.png', 'telegramm-icon', );
$twitter-icon-name: 'twitter-icon';
$twitter-icon-x: 0px;
$twitter-icon-y: 30px;
$twitter-icon-offset-x: 0px;
$twitter-icon-offset-y: -30px;
$twitter-icon-width: 29px;
$twitter-icon-height: 30px;
$twitter-icon-total-width: 79px;
$twitter-icon-total-height: 60px;
$twitter-icon-image: '../img/sprite.png';
$twitter-icon: (0px, 30px, 0px, -30px, 29px, 30px, 79px, 60px, '../img/sprite.png', 'twitter-icon', );
$viber-icon-name: 'viber-icon';
$viber-icon-x: 60px;
$viber-icon-y: 19px;
$viber-icon-offset-x: -60px;
$viber-icon-offset-y: -19px;
$viber-icon-width: 19px;
$viber-icon-height: 19px;
$viber-icon-total-width: 79px;
$viber-icon-total-height: 60px;
$viber-icon-image: '../img/sprite.png';
$viber-icon: (60px, 19px, -60px, -19px, 19px, 19px, 79px, 60px, '../img/sprite.png', 'viber-icon', );
$vk-icon-name: 'vk-icon';
$vk-icon-x: 29px;
$vk-icon-y: 30px;
$vk-icon-offset-x: -29px;
$vk-icon-offset-y: -30px;
$vk-icon-width: 29px;
$vk-icon-height: 30px;
$vk-icon-total-width: 79px;
$vk-icon-total-height: 60px;
$vk-icon-image: '../img/sprite.png';
$vk-icon: (29px, 30px, -29px, -30px, 29px, 30px, 79px, 60px, '../img/sprite.png', 'vk-icon', );
$watts-icon-name: 'watts-icon';
$watts-icon-x: 60px;
$watts-icon-y: 38px;
$watts-icon-offset-x: -60px;
$watts-icon-offset-y: -38px;
$watts-icon-width: 19px;
$watts-icon-height: 19px;
$watts-icon-total-width: 79px;
$watts-icon-total-height: 60px;
$watts-icon-image: '../img/sprite.png';
$watts-icon: (60px, 38px, -60px, -38px, 19px, 19px, 79px, 60px, '../img/sprite.png', 'watts-icon', );
$spritesheet-width: 79px;
$spritesheet-height: 60px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($facebook-icon, $instagram-icon, $telegramm-icon, $twitter-icon, $viber-icon, $vk-icon, $watts-icon, );
$spritesheet: (79px, 60px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
